1. 简答题（2.0分）难度：中
得分:2.0分

变量的命名应当符合什么规则？
我的答案

1.变量由数字，字母和下划线组成

2.变量不能以数字开头

3.变量不能使用关键字

4.变量区分大小写
参考答案

由字母、下划线 和数字 组成不能以数字开头不能与关键字重名建议不要与内置函数或者类重名，不然会覆盖原始内置函数的功能区分大小写如果 变量名 需要由 二个 或 多个单词 组成时每个单词都使用小写字母单词与单词之间使用 _下划线 连接
试题解析
2. 简答题（5.0分）难度：中
得分:5.0分

变量的类型有哪些？

 
我的答案

数值，字符串，列表，元组，字典，集合，None，布尔类型
参考答案

整型 (int)浮点型（float）布尔型（bool） 真 True假 False复数型 (complex)字符串列表元组字典

 
试题解析
3. 简答题（3.0分）难度：中
得分:3.0分

 Python中关键字有哪些？请至少写出10个
我的答案

None ,import,if else,while,return,with,Ture,False,pass,as,for,continue,break
参考答案

if、elif、else、while、break、continue、for、in、is、or、and、not、def、None、True、False

 
试题解析
4. 简答题（5.0分）难度：中
得分:5.0分

如何查看变量的内存地址、变量的类型以及如何比较两个变量值的大小？
我的答案

a="12"

b=13

print(id(a))

print(type(a))

if int(a)>int(b):

  print（“a比b大")

if int(a)==int(b):

  print（“a等于b")

if int(a)<int(b):

  print（“a比b小")

 
参考答案

a.如何查看变量的内存地址id  

b.变量的类型type

c.如何比较两个变量值的大小？==
试题解析
5. 简答题（5.0分）难度：中
得分:4.0分

  数字类型的字符串（如："123"）与数字类型之间如何相互转换？
我的答案

str=“123”

a=int（str）

b=123

c=str(b)
参考答案

数字类型的字符串转换为数字int、float数字类型转换为数字类型的字符串str

 
试题解析
6. 简答题（5.0分）难度：中
得分:4.0分

字符串与列表之间如何相互转换？
我的答案

1字符串转成列表
str2="wuhanguangruruanjianyuan"
list1=list(str2)
print(list1)
2.列表转成字符串
list2=["wuhan","guangru","ruanjianyuan"]
str3="".join(list2)
print(str3)

参考答案

str -> list    

字符串.split("")    按指定分隔符截断，结果就是列表。

或者直接list(字符串)，每个字符为列表的成员。

list -> str

"".join(列表)   将列表的值拼成一个字符串。要求列表的每个成员是字符串

直接str(list变量)  将整个列表直接转换为字符串类型，字符串内容与列表一模一样

 
试题解析
7. 简答题（5.0分）难度：中
得分:5.0分

Python中的运算符有哪些种类？
我的答案

算术运算符，逻辑运算符，比较运算符，赋值运算符，成员运算符
参考答案

算术、赋值    一般是整数或者符点数的计算，计算结果也是整数或者符点数。

比较、逻辑、成员运算符    结果是布尔值，一般可以作为判断的条件。

 
试题解析
8. 简答题（5.0分）难度：中
得分:4.0分

Python中逻辑运算符有哪些？它们之间有什么区别？
我的答案

and ，or，not 

and表示需要多种条件同时满足

or表示多种条件中只要一种条件满足即可

not表示不属于或者不在什么里面
参考答案

and一假必假，两真才为真or一真必真，两假才为假not以假乱真
试题解析
9. 简答题（5.0分）难度：中
得分:4.0分

有哪些方法可以修改列表中的某个元素呢？
我的答案

list1=["武汉","光谷"]

list1[0]=“中国”

 
参考答案

列表[index] = value

列表[start_index:end_index] = value

 
试题解析
10. 简答题（5.0分）难度：中
得分:4.0分

列表中的append和extend的区别
我的答案

append是往列表中单个元素进行插入

extend是往列表中进行多个元素的插入
参考答案

append是将给定的数据加入到列表中（将一个整体作为一个元素加入列表中）extend是将序列类型的数据扩充到列表中（将序列类型的每一个数据取出之后，加入到列表中）
试题解析
11. 简答题（5.0分）难度：中
得分:5.0分

元组和列表之间如何相互转换？
我的答案

1.元组转列表
c=(1,2,3,5)
d=list(c)
2列表转元组
list1=["1","2","3"]
b=tuple(list1)


参考答案

tuple -> list       list()

list -> tuple        tuple()
试题解析
12. 简答题（5.0分）难度：中
得分:3.0分

获取字典中的某个值，有哪几种方法？有什么区别？
我的答案

a={"姓名":"周志仁","性别":"男"}
for i in a.values():
   print（i）
for j,m in a.items():
   print（m）
第一种是只获取字典的值，第二种的是字典的key和value都获取

参考答案

字典[key]key不存在会报错

字典.get(key)key不存在不会报错，返回None，也可指定返回值

 
试题解析
13. 简答题（5.0分）难度：中
得分:5.0分

python中不可变类型有哪些？可变类型有哪些？
我的答案

不可变类型：str、tuple、int、float、bool

可变类型:list、dict
参考答案

不可变类型str、tuple、int、float、bool
可变类型list  dict
试题解析
14. 简答题（5.0分）难度：中
得分:3.0分

for和while的区别？
我的答案

for循环一般是有循环次数限制的场景下使用

while循环适合无限循环的场景
参考答案

应用场景上：

while 循环执行次数往往不确定

for 循环次数已知，推荐使用

语法 上：

while后面跟条件，为避免死循环，在while内部会有退出循环的条件并使用break跳出； 也会在循环在内部，做些处理能够在循环过程中，使while的条件能达到不成立的时候。

for循环主要是用来遍历列表/字典/元组。
试题解析
15. 简答题（5.0分）难度：中
得分:3.0分

局部变量和全局变量有什么区别？
我的答案

局部变量指的是只能再特定的范围才能进行使用

全局变量指的是在全局都可以进行调用
参考答案

全局变量：在全局作用域（全局命名空间）中定义
局部变量：在局部作用域（局部命名空间）中定义
比如，函数内部定义的变量，就是局部变量，仅函数内部可用。
在py文件中，定义的变量，就是当前py文件内容全局可用。
试题解析
16. 简答题（5.0分）难度：中
得分:4.0分

函数参数有哪几种定义方式？
我的答案

位置参数，关键字参数，默认参数，不定长参数四种方式
参考答案

函数参数的定义方式有3种，必传参数，默认参数，和个数可变参数。
必传参数：在调用时必须传递，并且要按照位置传参。
默认参数：在定义时直接指定默认值。在调用时，可以传可以不传。
可变参数：定义时通过*args，或者**kwargs表达。函数内部视为元组或者字典 。
在调用的时候，可以传多个值。
比如，print函数就用到了*args。
试题解析
17. 简答题（5.0分）难度：中
得分:5.0分

类和对象当中，self是什么？cls又是什么？
我的答案

self指的是对象本身，cla指的是类本身
参考答案

在类当中，self代表对象本身，cls代表类本身。
试题解析
18. 简答题（5.0分）难度：中
得分:3.0分

类中定义方法时，有哪几种形式？使用场景有什么区别？
我的答案

三种：类方法，实例方法和静态方法

实例方法：是用来生产对象的，需要用来的实例对象或者一些属性的时候的场景

类方法是：不需要使用实例对象或者属性的场景

静态方法是用于规则方法的管理的，静态方法的使用场景是既不需要调用类方法，也不需要调用实例方法
参考答案

类中定义方法时，可以定义3种
第一种，实例方法，第一个参数就是self，实例对象可以调用。
第二种，类方法，需要@classmethod装饰，第一个参数是cls，类和实例都可以调用。
第三种，静态方法，需要@staticmethod装饰，没有固定要传的参数，只是普通函数，不过作用域在类的命名空间里。类和实例都可以调用。
试题解析
19. 简答题（5.0分）难度：中
得分:4.0分

类的继承中self和super有什么区别？
我的答案

self指的是对象自己的

super指的是继承父类的
参考答案

一般是在类的继承中使用，当子类重写父类同名方法，并且要调用父类同名方法时，通过super()去调用。
比如子类的初始化方法当中，调用父类的初始化方法，就使用super().__init__方式。
试题解析
20. 简答题（1.0分）难度：中
得分:0.0分

属性的操作方法有哪些？
我的答案

self.
参考答案

1、设置/修改属性：setattr()
2、获取属性：getattr()
3、判断属性是否存在：hasattr()
4、删除属性：delattr()
试题解析
21. 简答题（5.0分）难度：中
得分:5.0分

1.编写如下程序使用while循环实现输出2 - 3 + 4 - 5 + 6 ... + 100 的和
我的答案

i=2
j=0
while i<=100:
    if i%2==0:
        j=j+i
    else:
        j=j-i
    i=i+1
print(j)

参考答案

def test_01():
    i = 2   # 定义循环变量
    result = 0  # 定义一个变量用于保存结果
    while i <= 100:
        if i % 2 == 0:
            result += i
        else:
            result -= i
        i += 1  # 修改循环变量
    print("2 - 3 + 4 - 5 + 6 ... + 100之和为{}".format(result))

试题解析
22. 简答题（5.0分）难度：中
得分:5.0分

编写如下程序

用户输入考试成绩，当分数高于90（包含90）时打印A；否则如果分数高于80（包含80）时打印B；否则如果当分数高于70（包含）时打印C；否则如果当分数高于60（包含60）时打印D；其他情况就打印E
我的答案

a=input("请输入考试成绩")

if float(a)>90:

  print("A")

if 80<float(a)<=90:

  print("B")

if 70<float(a)<=80:

  print("C")

if 60<float(a)<=70:

  print("D")

else:

  print("E")
参考答案

def test_02():
    score = int(input("请输入你的考试成绩："))
    if score >= 90:
        print("你成绩为：A")
    elif score >= 80:
        print("你成绩为：B")
    elif score >= 70:
        print("你成绩为：C")
    elif score >= 60:
       print("你成绩为：D")
    else:
       print("你成绩为：E")

试题解析
23. 简答题（5.0分）难度：中
得分:4.0分

编写如下程序

假设一年的定期利率为3.52%，需要几年才能让定期存款连本带息的翻一番（例如：需要几年10000才能变成20000）
我的答案

a=1000
c=a*2
year=1
while a<c:
    a=a*(1+0.0352)
    year=year+1
print(f"需要{year}才能让定期存款连本带息的翻一番")

参考答案

def test_03():
    save_money = float(input("请输入你要存入银行的钱："))
    print("你存了{}元到银行!".format(save_money))
    TOTAL_MONEY = save_money * 2   # 定义变量用于保存总钱数
    year = 0    # 定义变量用于记录年份
    while save_money < TOTAL_MONEY:
        save_money *= (1 + 0.0352)
        year += 1
    print("定期利率为3.52%，需要{}年本金和才能翻一番。".format(year))

试题解析
24. 简答题（5.0分）难度：中
得分:3.0分

编写如下程序从键盘获取一个数字，然后计算它的阶乘，例如输入的是3，那么即计算3!的结果，并输出 提示：

 a. 1!等于 1

 b. 2!等于 1*2

 c. 3!等于 1*2*3

 

d. n!等于 1*2*3*...*n
我的答案

defjiecheng():
j=input("请输入一个数字：")
i=1
if j<=0:
  print("您输入的内容有误，请重新输入")
else：
   for i in range(1,int(j)+1):
      i*=i
   print(f"{j}！等于{i}")
jiecheng（）

参考答案

class TestDemo:
    def __is_int(self,int_num):
        if isinstance(int_num, str):  # 判断是否为字符串类型
            if int_num.isdigit():
                return True
            else:
                return False
        elif isinstance(int_num, int):  # 判断是否为整数类型
            return True
        else:
            return False

    def __count_factorial(self,one_num):
        result = 1
        if one_num < 0:
            print("{}为负数，没有阶乘！".format(one_num))
            return None
        elif one_num in (0, 1):
            return 1
        else:
            for i in range(1, one_num + 1):
                result *= i
        return result

    def out_put(self):
        input_num = input("请输入一个正整数：")
        is_int_result = self.__is_int(input_num)
        if is_int_result:
             input_num = int(input_num)
             count_factorial_result = self.__count_factorial(input_num)
             print("{}的阶乘为：{}".format(input_num, count_factorial_result))
        else:
             print("输入的{}有误，请输入一个正整数!".format(input_num))

if __name__ == '__main__':
    cl = TestDemo()
    cl.out_put()

试题解析